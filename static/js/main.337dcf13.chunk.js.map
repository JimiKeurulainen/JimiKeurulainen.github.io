{"version":3,"sources":["components/Carousel.js","components/Navbar.js","reportWebVitals.js","index.js"],"names":["Carousel","i","useState","className","Btn","props","btnStyle","marginTop","color","setColor","toggleColor","value","active","style","onClick","func","name","Navbar","height","window","innerHeight","margin","pos","setPos","togglePos","scrollTo","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","base","document","getElementById"],"mappings":"0KAiBeA,MAdf,WAEE,IADA,IACSC,EAAI,EAAGA,EAAI,GAAIA,KAGxB,MAA0BC,mBAAS,GAAnC,mBAEA,OAFA,UAGE,qBAAKC,UAAU,cCRnB,SAASC,EAAIC,GACX,IAAMC,EAAW,CACfC,UAAU,GAAD,OAAKF,EAAMC,SAAX,OAEX,EAA0BJ,oBAAS,GAAnC,mBAAOM,EAAP,KAAcC,EAAd,KACMC,EAAc,kBAAMD,GAAS,SAAAE,GAAK,OAAKA,MAI7C,OAFiBL,EAASE,OAAhB,IAAVA,EAAkC,OAA0B,SAE9C,IAAVA,IAAmC,IAAjBH,EAAMO,SAOF,IAAjBP,EAAMO,OALX,wBAAQC,MAAOP,EAAUQ,QAAS,WAAOT,EAAMU,OAAQL,KAAvD,SACGL,EAAMW,QAWa,IAAjBX,EAAMO,OAEX,wBAAQC,MAAOP,EAAUQ,QAAS,WAAOJ,KAAzC,SACGL,EAAMW,YAHR,EAiCQC,MAxBf,WACE,IAAqBC,EAAWC,OAAxBC,YACJC,EAAS,EACb,EAAsBnB,oBAAS,GAA/B,mBAAOoB,EAAP,KAAYC,EAAZ,KACMC,EAAY,kBAAMD,GAAO,SAAAZ,GAAK,OAAKA,MAWzC,OATY,IAARW,GACFD,EAAS,GACTF,OAAOM,SAAS,EAAGP,KAGnBG,EAAS,EACTF,OAAOM,SAAS,EAAG,IAInB,sBAAKC,GAAG,SAAR,UACE,cAACtB,EAAD,CAAKY,KAAK,UAAUD,KAAMS,EAAWZ,OAAQU,EAAKhB,SAAUe,IAC5D,cAACjB,EAAD,CAAKY,KAAK,WAAWD,KAAMS,EAAWZ,OAAQU,EAAKhB,SAAUe,IAC7D,cAACjB,EAAD,CAAKY,KAAK,UAAUD,KAAMS,EAAWZ,OAAQU,EAAKhB,SAAUe,QC1CnDM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCEdQ,IAASC,OACP,cAAC,IAAD,CAAYC,KAAK,IAAjB,SACE,sBAAKnC,UAAU,OAAf,UACE,qBAAKA,UAAU,SAAf,8BAGA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,qBAAKA,UAAU,oBAKnBoC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.337dcf13.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport '../css/index.css';\r\n\r\nfunction Carousel() {\r\n  const picArr = [];\r\n  for (var i = 0; i < 10; i++) {\r\n    \r\n  }\r\n  const [count, setCount] = useState(0);\r\n\r\n  return (\r\n    <div className=\"Carousel\">\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Carousel;","import React, { useState } from 'react';\r\nimport '../css/index.css';\r\n\r\nfunction Btn(props) {\r\n  const btnStyle = {\r\n    marginTop: `${props.btnStyle}vh`,\r\n  };\r\n  const [color, setColor] = useState(false);\r\n  const toggleColor = () => setColor(value => !value);\r\n\r\n  color === true ? btnStyle.color = \"blue\" : btnStyle.color = \"black\";\r\n\r\n  if (color === true && props.active === true) {\r\n    return (\r\n      <button style={btnStyle} onClick={() => {props.func(); toggleColor();}}>\r\n        {props.name}\r\n      </button>\r\n    )\r\n  }\r\n  else if (props.active === false) {\r\n    return (\r\n      <button style={btnStyle} onClick={() => {props.func(); toggleColor();}}>\r\n        {props.name}\r\n      </button>\r\n    )\r\n  }\r\n  else if (props.active === true) {\r\n    return (\r\n      <button style={btnStyle} onClick={() => {toggleColor();}}>\r\n        {props.name}\r\n      </button>\r\n    )\r\n  }\r\n}\r\n\r\nfunction Navbar() {\r\n  const { innerHeight: height } = window;\r\n  let margin = 0;\r\n  const [pos, setPos] = useState(false);\r\n  const togglePos = () => setPos(value => !value);\r\n\r\n  if (pos === true) {\r\n    margin = 15;\r\n    window.scrollTo(0, height);\r\n  }\r\n  else {\r\n    margin = 0;\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  return (\r\n    <div id='Navbar'>\r\n      <Btn name=\"GALLERY\" func={togglePos} active={pos} btnStyle={margin} />\r\n      <Btn name=\"ABOUT ME\" func={togglePos} active={pos} btnStyle={margin} />\r\n      <Btn name=\"CONTACT\" func={togglePos} active={pos} btnStyle={margin} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport Carousel from './components/Carousel';\r\nimport Navbar from './components/Navbar';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <HashRouter base=\"/\">\r\n    <div className='Body'>\r\n      <div className='Header'>\r\n        Jimi Keurulainen\r\n      </div>\r\n      <Carousel />\r\n      <Navbar />\r\n      <div className='Bottombody'>\r\n\r\n      </div>\r\n    </div>\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}