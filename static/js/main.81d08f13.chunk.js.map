{"version":3,"sources":["components/Carousel.js","components/Navbar.js","components/Bottombody.js","reportWebVitals.js","index.js"],"names":["Carousel","props","className","style","backgroundColor","Btn","posy","onClick","setActive","id","togglePosy","name","toString","active","Navbar","nameArray","btnArray","window","height","innerHeight","width","innerWidth","useState","setPosy","value","btnStyle","marginTop","color","i","push","posx","splice","borderTop","scrollBy","Bottombody","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","base","document","getElementById"],"mappings":"mKAsBeA,MAnBf,SAAkBC,GAEhB,OACE,qBAAKC,UAAU,WAAf,SACA,gCACE,qBAAKC,MAAO,CAACC,gBAAiB,QAA9B,qBAGA,qBAAKD,MAAO,CAACC,gBAAiB,SAA9B,sBAGA,qBAAKD,MAAO,CAACC,gBAAiB,OAA9B,2B,OCVN,SAASC,EAAIJ,GACX,OAAmB,IAAfA,EAAMK,KAEN,yBAAQH,MAAOF,EAAME,MAAOI,QAAS,WACnCN,EAAMO,UAAUP,EAAMQ,IACtBR,EAAMS,cAFR,UAIGT,EAAMU,KAJT,IAIgBV,EAAMK,KAAKM,WAJ3B,IAIuC,uBACpCX,EAAMY,WAIW,IAAfZ,EAAMK,MAAiBL,EAAMY,QAAUZ,EAAMQ,GAElD,yBAAQN,MAAOF,EAAME,MAAOI,QAAS,WACnCN,EAAMS,cADR,UAGGT,EAAMU,KAHT,IAGgBV,EAAMK,KAAKM,WAH3B,IAGuC,uBACpCX,EAAMY,UAMT,yBAAQV,MAAOF,EAAME,MAAOI,QAAS,WACnCN,EAAMO,UAAUP,EAAMQ,KADxB,UAGGR,EAAMU,KAHT,IAGgBV,EAAMK,KAAKM,WAH3B,IAGuC,uBACpCX,EAAMY,UA+DAC,MAzDf,WAYE,IAXA,IAAMC,EAAY,CAAC,UAAW,WAAY,WACpCC,EAAW,GACjB,EAAmDC,OAA9BC,EAArB,EAAQC,YAAiCC,EAAzC,EAA6BC,WAC7B,EAAwBC,oBAAS,GAAjC,mBAAOhB,EAAP,KAAaiB,EAAb,KACMb,EAAa,kBAAMa,GAAQ,SAAAC,GAAK,OAAKA,MAC3C,EAA4BF,mBAAS,GAArC,mBAAOT,EAAP,KAAeL,EAAf,KACMiB,EAAW,CACfC,UAAW,MACXC,MAAO,SAGAC,EAAI,EAAGA,EAAI,EAAGA,IACrBZ,EAASa,KACP,cAACxB,EAAD,CACEI,GAAImB,EACJpB,UAAWA,EACXK,OAAQA,EACRH,WAAYA,EACZJ,KAAMA,EACNwB,KAAMF,EAAIR,EACVT,KAAMI,EAAUa,GAChBzB,MAAOsB,KA4Bb,OAvBa,IAATnB,GACFU,EAASe,OAAOlB,EAAQ,EACtB,cAACR,EAAD,CACEI,GAAII,EACJL,UAAWA,EACXK,OAAQA,EACRH,WAAYA,EACZJ,KAAMA,EACNwB,KAAMjB,EAASO,EACfT,KAAMI,EAAUF,GAChBV,MAAO,CACLuB,UAAW,OACXM,UAAW,gBAIjBf,OAAOgB,SAAS,EAAGf,GACnBO,EAASC,UAAY,QAGrBT,OAAOgB,SAAS,GAAIf,GAIpB,qBAAKT,GAAG,SAAR,SACGO,KCpEQkB,MAlBf,SAAoBjC,GAClB,OACE,qBAAKC,UAAU,WAAf,SACA,gCACE,qBAAKC,MAAO,CAACC,gBAAiB,QAA9B,qBAGA,qBAAKD,MAAO,CAACC,gBAAiB,SAA9B,sBAGA,qBAAKD,MAAO,CAACC,gBAAiB,OAA9B,2BCFS+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCGdQ,IAASC,OACP,cAAC,IAAD,CAAYC,KAAK,IAAjB,SACE,sBAAK5C,UAAU,OAAf,UACE,qBAAKA,UAAU,SAAf,8BAGA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,SAGJ6C,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.81d08f13.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport '../css/index.css';\r\n\r\nfunction Carousel(props) {\r\n\r\n  return (\r\n    <div className=\"Carousel\">\r\n    <div>\r\n      <div style={{backgroundColor: \"blue\"}}>\r\n        GALLERY\r\n      </div>\r\n      <div style={{backgroundColor: \"green\"}}>\r\n        ABOUT ME\r\n      </div>\r\n      <div style={{backgroundColor: \"red\"}}>\r\n        CONTACT\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Carousel;","import React, { useState, useEffect } from 'react';\r\nimport { useLinkClickHandler } from 'react-router-dom';\r\nimport '../css/index.css';\r\n\r\nfunction Btn(props) {\r\n  if (props.posy === false) {\r\n    return (\r\n      <button style={props.style} onClick={() => {\r\n        props.setActive(props.id);\r\n        props.togglePosy();\r\n        }}>\r\n        {props.name} {props.posy.toString()} <br></br>\r\n        {props.active}\r\n      </button>\r\n    )\r\n  }\r\n  else if (props.posy === true && props.active == props.id) {\r\n    return (\r\n      <button style={props.style} onClick={() => {\r\n        props.togglePosy();\r\n        }}>\r\n        {props.name} {props.posy.toString()} <br></br>\r\n        {props.active}\r\n      </button>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <button style={props.style} onClick={() => {\r\n        props.setActive(props.id);\r\n        }}>\r\n        {props.name} {props.posy.toString()} <br></br>\r\n        {props.active}\r\n      </button>\r\n    )\r\n  }\r\n}\r\n\r\nfunction Navbar() {\r\n  const nameArray = [\"GALLERY\", \"ABOUT ME\", \"CONTACT\"];\r\n  const btnArray = [];\r\n  const { innerHeight: height, innerWidth: width } = window;\r\n  const [posy, setPosy] = useState(false);\r\n  const togglePosy = () => setPosy(value => !value);\r\n  const [active, setActive] = useState(4);\r\n  const btnStyle = {\r\n    marginTop: \"0vh\",\r\n    color: \"black\",\r\n  }\r\n\r\n  for (var i = 0; i < 3; i++) {\r\n    btnArray.push(\r\n      <Btn\r\n        id={i}\r\n        setActive={setActive}\r\n        active={active}\r\n        togglePosy={togglePosy}\r\n        posy={posy}\r\n        posx={i * width}\r\n        name={nameArray[i]}\r\n        style={btnStyle}\r\n      />\r\n    )\r\n  }\r\n  // \r\n  if (posy === true) {\r\n    btnArray.splice(active, 1, \r\n      <Btn\r\n        id={active}\r\n        setActive={setActive}\r\n        active={active}\r\n        togglePosy={togglePosy}\r\n        posy={posy}\r\n        posx={active * width}\r\n        name={nameArray[active]}\r\n        style={{\r\n          marginTop: \"15vh\",\r\n          borderTop: \"5vh solid\"\r\n        }}\r\n      />\r\n    );\r\n    window.scrollBy(0, height);\r\n    btnStyle.marginTop = \"15vh\";\r\n  }\r\n  else {\r\n    window.scrollBy(0, -height);\r\n  }\r\n\r\n  return (\r\n    <div id='Navbar'>\r\n      {btnArray}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React, { useState } from 'react';\r\nimport Navbar from './Navbar';\r\nimport '../css/index.css';\r\n\r\nfunction Bottombody(props) {\r\n  return (\r\n    <div className=\"Carousel\">\r\n    <div>\r\n      <div style={{backgroundColor: \"grey\"}}>\r\n        GALLERY\r\n      </div>\r\n      <div style={{backgroundColor: \"green\"}}>\r\n        ABOUT ME\r\n      </div>\r\n      <div style={{backgroundColor: \"red\"}}>\r\n        CONTACT\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Bottombody;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport Carousel from './components/Carousel';\r\nimport Navbar from './components/Navbar';\r\nimport Bottombody from './components/Bottombody';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <HashRouter base=\"/\">\r\n    <div className='Body'>\r\n      <div className='Header'>\r\n        Jimi Keurulainen\r\n      </div>\r\n      <Carousel />\r\n      <Navbar />\r\n      <Bottombody />\r\n    </div>\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}